openapi: 3.1.0
info:
  title: Super App Framework Service
  version: 0.0.0
tags:
  - name: Admin - Auth
  - name: Admin - Invitation
  - name: Admin - Data Source
  - name: Admin - Mini app
  - name: Admin - Mini App Version
  - name: Admin - Mini App Page
  - name: Customer Auth
  - name: Customer - User
paths:
  /api/admin/auth/login:
    post:
      operationId: Auth_login
      parameters: []
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
  /api/admin/auth/refresh-token:
    post:
      operationId: Auth_refreshToken
      parameters: []
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
  /api/admin/data-sources:
    post:
      operationId: DataSource_create
      parameters: []
      responses:
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Data Source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDataSourceRequest"
    get:
      operationId: DataSource_list
      parameters:
        - $ref: "#/components/parameters/PaginationParams.page"
        - $ref: "#/components/parameters/PaginationParams.limit"
        - $ref: "#/components/parameters/PaginationParams.sort"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - total
                  - page
                  - pageSize
                  - totalPages
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DataSource"
                  total:
                    type: integer
                    format: int32
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  totalPages:
                    type: integer
                    format: int32
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Data Source
  /api/admin/data-sources/{id}:
    get:
      operationId: DataSource_get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Data Source
    put:
      operationId: DataSource_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Data Source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDataSourceRequest"
    delete:
      operationId: DataSource_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: "There is no content to send for this request, but the headers may be useful. "
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Data Source
  /api/admin/invitations/{token}:
    get:
      operationId: Invitation_validate
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Invitation
  /api/admin/invitations/{token}/accept:
    post:
      operationId: Invitation_accept
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Invitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptInvitationRequest"
  /api/admin/mini-apps:
    post:
      operationId: MiniApp_createMiniApp
      parameters: []
      responses:
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMiniAppRequest"
    get:
      operationId: MiniApp_listMiniApps
      parameters:
        - $ref: "#/components/parameters/PaginationParams.page"
        - $ref: "#/components/parameters/PaginationParams.limit"
        - $ref: "#/components/parameters/PaginationParams.sort"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - total
                  - page
                  - pageSize
                  - totalPages
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MiniApp"
                  total:
                    type: integer
                    format: int32
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  totalPages:
                    type: integer
                    format: int32
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini app
  /api/admin/mini-apps/{id}:
    get:
      operationId: MiniApp_getMiniApp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini app
    put:
      operationId: MiniApp_updateMiniApp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMiniAppRequest"
    delete:
      operationId: MiniApp_deleteMiniApp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: "There is no content to send for this request, but the headers may be useful. "
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini app
  /api/admin/mini-apps/{miniAppId}/versions:
    post:
      operationId: MiniAppVersion_create
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                  miniAppType:
                    $ref: "#/components/schemas/MiniAppType"
                  version:
                    type: string
                  releaseNote:
                    type: string
                  miniAppUrl:
                    type: string
                  miniAppVersionStatus:
                    $ref: "#/components/schemas/MiniAppVersionStatus"
                  url:
                    type: string
                  thumbnailUrl:
                    type: string
                  s3Key:
                    type: string
                  miniAppId:
                    type: integer
                    format: int32
                  teamId:
                    type: integer
                    format: int32
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  pages:
                    type: array
                    items:
                      $ref: "#/components/schemas/MiniAppPage"
                required:
                  - id
                  - miniAppType
                  - version
                  - releaseNote
                  - miniAppVersionStatus
                  - thumbnailUrl
                  - miniAppId
                  - teamId
                  - createdAt
                  - createdBy
                  - pages
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Version
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMiniAppVersionRequest"
    get:
      operationId: MiniAppVersion_list
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/PaginationParams.page"
        - $ref: "#/components/parameters/PaginationParams.limit"
        - $ref: "#/components/parameters/PaginationParams.sort"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - total
                  - page
                  - pageSize
                  - totalPages
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MiniAppVersion"
                  total:
                    type: integer
                    format: int32
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  totalPages:
                    type: integer
                    format: int32
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Version
  /api/admin/mini-apps/{miniAppId}/versions/{id}:
    get:
      operationId: MiniAppVersion_get
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                  miniAppType:
                    $ref: "#/components/schemas/MiniAppType"
                  version:
                    type: string
                  releaseNote:
                    type: string
                  miniAppUrl:
                    type: string
                  miniAppVersionStatus:
                    $ref: "#/components/schemas/MiniAppVersionStatus"
                  url:
                    type: string
                  thumbnailUrl:
                    type: string
                  s3Key:
                    type: string
                  miniAppId:
                    type: integer
                    format: int32
                  teamId:
                    type: integer
                    format: int32
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  pages:
                    type: array
                    items:
                      $ref: "#/components/schemas/MiniAppPage"
                required:
                  - id
                  - miniAppType
                  - version
                  - releaseNote
                  - miniAppVersionStatus
                  - thumbnailUrl
                  - miniAppId
                  - teamId
                  - createdAt
                  - createdBy
                  - pages
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Version
    put:
      operationId: MiniAppVersion_update
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                  miniAppType:
                    $ref: "#/components/schemas/MiniAppType"
                  version:
                    type: string
                  releaseNote:
                    type: string
                  miniAppUrl:
                    type: string
                  miniAppVersionStatus:
                    $ref: "#/components/schemas/MiniAppVersionStatus"
                  url:
                    type: string
                  thumbnailUrl:
                    type: string
                  s3Key:
                    type: string
                  miniAppId:
                    type: integer
                    format: int32
                  teamId:
                    type: integer
                    format: int32
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  pages:
                    type: array
                    items:
                      $ref: "#/components/schemas/MiniAppPage"
                required:
                  - id
                  - miniAppType
                  - version
                  - releaseNote
                  - miniAppVersionStatus
                  - thumbnailUrl
                  - miniAppId
                  - teamId
                  - createdAt
                  - createdBy
                  - pages
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Version
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMiniAppVersionRequest"
    delete:
      operationId: MiniAppVersion_delete
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: "There is no content to send for this request, but the headers may be useful. "
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Version
  /api/admin/mini-apps/{miniAppId}/versions/{versionId}/pages:
    post:
      operationId: MinippPage_create
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppPage"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMiniAppPageRequest"
    get:
      operationId: MinippPage_list
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/PaginationParams.page"
        - $ref: "#/components/parameters/PaginationParams.limit"
        - $ref: "#/components/parameters/PaginationParams.sort"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MiniAppPage"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Page
  /api/admin/mini-apps/{miniAppId}/versions/{versionId}/pages/{id}:
    get:
      operationId: MinippPage_get
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppPage"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Page
    put:
      operationId: MinippPage_update
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppPage"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMiniAppPageRequest"
    delete:
      operationId: MinippPage_delete
      parameters:
        - name: miniAppId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: "There is no content to send for this request, but the headers may be useful. "
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Mini App Page
  /api/admin/teams/{teamId}/invitations:
    post:
      operationId: Invitation_inviteToTeam
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Invitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteToTeamRequest"
  /api/admin/users/invitations:
    post:
      operationId: Invitation_inviteToSystem
      parameters: []
      responses:
        "200":
          description: The request has succeeded.
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      tags:
        - Admin - Invitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteToSystemRequest"
  /api/auth/refresh-token:
    post:
      operationId: Auth_refreshToken
      parameters: []
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"
      tags:
        - Customer Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
  /api/test/users:
    get:
      operationId: User_getUsers
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: name
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: status
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: teamId
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
        - name: roleValue
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: isSystemAdmin
          in: query
          required: false
          schema:
            type: boolean
          explode: false
        - $ref: "#/components/parameters/PaginationParams.page"
        - $ref: "#/components/parameters/PaginationParams.limit"
        - $ref: "#/components/parameters/PaginationParams.sort"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - total
                  - page
                  - pageSize
                  - totalPages
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestUserDto"
                  total:
                    type: integer
                    format: int32
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  totalPages:
                    type: integer
                    format: int32
      tags:
        - Customer - User
components:
  parameters:
    PaginationParams.limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 20
      explode: false
    PaginationParams.page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
      explode: false
    PaginationParams.sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      explode: false
  schemas:
    AcceptInvitationRequest:
      type: object
      required:
        - name
        - password
      properties:
        name:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    CreateDataSourceRequest:
      type: object
      required:
        - dataSourceType
        - name
        - config
      properties:
        dataSourceType:
          $ref: "#/components/schemas/DataSourceType"
        name:
          type: string
        description:
          type: string
        config:
          $ref: "#/components/schemas/DataSourceTableConfig"
      description: The template for omitting properties.
    CreateMiniAppPageRequest:
      type: object
      required:
        - miniAppVersionId
        - name
        - showInTab
        - order
      properties:
        miniAppVersionId:
          type: integer
          format: int32
        name:
          type: string
        showInTab:
          type: boolean
          default: false
        order:
          type: integer
          format: int32
        widgets:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppWidget"
      description: The template for omitting properties.
    CreateMiniAppRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        customerServiceContactNumber:
          type: string
        customerServiceContactEmail:
          type: string
        termsAndConditionsUrl:
          type: string
        categoryId:
          type: integer
          format: int32
      description: The template for omitting properties.
    CreateMiniAppVersionRequest:
      type: object
      required:
        - miniAppType
        - version
        - releaseNote
        - miniAppVersionStatus
        - thumbnailUrl
        - miniAppId
        - teamId
      properties:
        miniAppType:
          $ref: "#/components/schemas/MiniAppType"
        version:
          type: string
        releaseNote:
          type: string
        miniAppUrl:
          type: string
        miniAppVersionStatus:
          $ref: "#/components/schemas/MiniAppVersionStatus"
        url:
          type: string
        thumbnailUrl:
          type: string
        s3Key:
          type: string
        miniAppId:
          type: integer
          format: int32
        teamId:
          type: integer
          format: int32
      description: The template for omitting properties.
    DataSource:
      type: object
      required:
        - id
        - dataSourceType
        - name
        - config
        - createdAt
        - createdBy
      properties:
        id:
          type: integer
          format: int32
        dataSourceType:
          $ref: "#/components/schemas/DataSourceType"
        name:
          type: string
        description:
          type: string
        config:
          $ref: "#/components/schemas/DataSourceTableConfig"
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: date-time
    DataSourcePermissionType:
      type: string
      enum:
        - allow
        - deny
        - owner
    DataSourceTableConfig:
      type: object
      required:
        - permissions
        - schema
      properties:
        permissions:
          $ref: "#/components/schemas/DataSourceTablePermissions"
        schema:
          type: array
          items:
            $ref: "#/components/schemas/DataSourceTableSchema"
    DataSourceTableFieldType:
      type: string
      enum:
        - string
        - number
        - boolean
        - datetime
        - image
    DataSourceTablePermissions:
      type: object
      required:
        - create
        - read
        - update
        - delete
      properties:
        create:
          $ref: "#/components/schemas/DataSourcePermissionType"
        read:
          $ref: "#/components/schemas/DataSourcePermissionType"
        update:
          $ref: "#/components/schemas/DataSourcePermissionType"
        delete:
          $ref: "#/components/schemas/DataSourcePermissionType"
    DataSourceTableSchema:
      type: object
      required:
        - name
        - type
        - required
      properties:
        name:
          type: string
        type:
          $ref: "#/components/schemas/DataSourceTableFieldType"
        required:
          type: boolean
    DataSourceType:
      type: string
      enum:
        - internal_table
        - rest_api
    GenericError:
      type: object
      required:
        - type
        - statusCode
        - message
      properties:
        type:
          type: string
        statusCode:
          type: number
        message:
          type: string
          default: An error occurred
    InviteToSystemRequest:
      type: object
      required:
        - email
        - systemRoles
      properties:
        email:
          type: string
        systemRoles:
          type: array
          items:
            type: string
    InviteToTeamRequest:
      type: object
      required:
        - email
        - roles
      properties:
        email:
          type: string
        roles:
          type: array
          items:
            type: string
    MiniApp:
      type: object
      required:
        - id
        - name
        - miniAppStatus
        - teamId
        - createdAt
        - createdBy
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        customerServiceContactNumber:
          type: string
        customerServiceContactEmail:
          type: string
        termsAndConditionsUrl:
          type: string
        miniAppStatus:
          $ref: "#/components/schemas/MiniAppStatus"
        categoryId:
          type: integer
          format: int32
        teamId:
          type: integer
          format: int32
        createdAt:
          type: string
        createdBy:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
    MiniAppPage:
      type: object
      required:
        - id
        - miniAppVersionId
        - name
        - showInTab
        - order
        - createdAt
        - createdBy
      properties:
        id:
          type: integer
          format: int32
        miniAppVersionId:
          type: integer
          format: int32
        name:
          type: string
        showInTab:
          type: boolean
          default: false
        order:
          type: integer
          format: int32
        createdAt:
          type: string
        createdBy:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
        widgets:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppWidget"
    MiniAppStatus:
      type: number
      enum:
        - 0
        - 1
    MiniAppType:
      type: number
      enum:
        - 1
        - 2
        - 3
    MiniAppVersion:
      type: object
      required:
        - id
        - miniAppType
        - version
        - releaseNote
        - miniAppVersionStatus
        - thumbnailUrl
        - miniAppId
        - teamId
        - createdAt
        - createdBy
      properties:
        id:
          type: integer
          format: int32
        miniAppType:
          $ref: "#/components/schemas/MiniAppType"
        version:
          type: string
        releaseNote:
          type: string
        miniAppUrl:
          type: string
        miniAppVersionStatus:
          $ref: "#/components/schemas/MiniAppVersionStatus"
        url:
          type: string
        thumbnailUrl:
          type: string
        s3Key:
          type: string
        miniAppId:
          type: integer
          format: int32
        teamId:
          type: integer
          format: int32
        createdAt:
          type: string
        createdBy:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
    MiniAppVersionStatus:
      type: number
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
    MiniAppWidget:
      type: object
      required:
        - id
        - pageId
        - widgetType
        - name
        - config
        - position
        - createdAt
        - createdBy
      properties:
        id:
          type: integer
          format: int32
        pageId:
          type: integer
          format: int32
        widgetType:
          $ref: "#/components/schemas/WidgetType"
        name:
          type: string
        config: {}
        position: {}
        style: {}
        createdAt:
          type: string
        createdBy:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
    TestTeamDto:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        roles:
          type: array
          items:
            type: string
    TestUserDto:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TestTeamDto"
    TokenRequest:
      type: object
      required:
        - userId
        - refreshToken
      properties:
        userId:
          type: string
        refreshToken:
          type: string
    TokenResponse:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
      allOf:
        - $ref: "#/components/schemas/TokenRequest"
    UpdateDataSourceRequest:
      type: object
      required:
        - dataSourceType
        - name
        - config
      properties:
        dataSourceType:
          $ref: "#/components/schemas/DataSourceType"
        name:
          type: string
        description:
          type: string
        config:
          $ref: "#/components/schemas/DataSourceTableConfig"
      description: The template for omitting properties.
    UpdateMiniAppPageRequest:
      type: object
      required:
        - name
        - showInTab
        - order
      properties:
        name:
          type: string
        showInTab:
          type: boolean
          default: false
        order:
          type: integer
          format: int32
        widgets:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppWidget"
      description: The template for omitting properties.
    UpdateMiniAppRequest:
      type: object
      required:
        - name
        - miniAppStatus
      properties:
        name:
          type: string
        description:
          type: string
        customerServiceContactNumber:
          type: string
        customerServiceContactEmail:
          type: string
        termsAndConditionsUrl:
          type: string
        miniAppStatus:
          $ref: "#/components/schemas/MiniAppStatus"
        categoryId:
          type: integer
          format: int32
      description: The template for omitting properties.
    UpdateMiniAppVersionRequest:
      type: object
      required:
        - miniAppType
        - version
        - releaseNote
        - miniAppVersionStatus
        - thumbnailUrl
      properties:
        miniAppType:
          $ref: "#/components/schemas/MiniAppType"
        version:
          type: string
        releaseNote:
          type: string
        miniAppUrl:
          type: string
        miniAppVersionStatus:
          $ref: "#/components/schemas/MiniAppVersionStatus"
        url:
          type: string
        thumbnailUrl:
          type: string
        s3Key:
          type: string
      description: The template for omitting properties.
    UserLoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    UserLoginResponse:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
      allOf:
        - $ref: "#/components/schemas/TokenRequest"
    ValidationError:
      type: object
      required:
        - type
        - statusCode
        - message
        - errors
      properties:
        type:
          type: string
        statusCode:
          type: number
        message:
          type: string
          default: An error occurred
        errors:
          type: object
          unevaluatedProperties:
            type: array
            items:
              type: string
    WidgetType:
      type: number
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
servers:
  - url: https://6pl6otxn2kp5e2te2hollaczb40pthsl.lambda-url.ap-southeast-1.on.aws
    variables: {}
